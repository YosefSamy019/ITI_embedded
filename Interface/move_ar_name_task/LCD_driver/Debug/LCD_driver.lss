
LCD_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000880  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  00000880  000008f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000209c  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000972  00000000  00000000  00002b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c11  00000000  00000000  000034ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000041c  00000000  00000000  000040e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000008f2  00000000  00000000  000044fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000154b  00000000  00000000  00004dee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  00006339  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e8       	ldi	r30, 0x80	; 128
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 38       	cpi	r26, 0x88	; 136
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 2c 02 	call	0x458	; 0x458 <main>
  7a:	0c 94 3e 04 	jmp	0x87c	; 0x87c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <HLCD_void_send>:
		HLCD_void_WriteCharacter(A_HLCD_t_lcd,'0'+  L_s32_ReversedNum%10);
		L_s32_ReversedNum = L_s32_ReversedNum / 10;
		L_digitsCounter--;
	}
	
}
  82:	af 92       	push	r10
  84:	bf 92       	push	r11
  86:	cf 92       	push	r12
  88:	df 92       	push	r13
  8a:	ef 92       	push	r14
  8c:	ff 92       	push	r15
  8e:	0f 93       	push	r16
  90:	1f 93       	push	r17
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	ec 01       	movw	r28, r24
  98:	b6 2e       	mov	r11, r22
  9a:	a2 2e       	mov	r10, r18
  9c:	67 01       	movw	r12, r14
  9e:	78 01       	movw	r14, r16
  a0:	64 2f       	mov	r22, r20
  a2:	89 81       	ldd	r24, Y+1	; 0x01
  a4:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
  a8:	6a 2d       	mov	r22, r10
  aa:	8a 81       	ldd	r24, Y+2	; 0x02
  ac:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
  b0:	88 81       	ld	r24, Y
  b2:	85 fd       	sbrc	r24, 5
  b4:	18 c0       	rjmp	.+48     	; 0xe6 <HLCD_void_send+0x64>
  b6:	29 c0       	rjmp	.+82     	; 0x10a <HLCD_void_send+0x88>
  b8:	21 2f       	mov	r18, r17
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	47 e0       	ldi	r20, 0x07	; 7
  be:	50 e0       	ldi	r21, 0x00	; 0
  c0:	42 1b       	sub	r20, r18
  c2:	53 0b       	sbc	r21, r19
  c4:	8b 2d       	mov	r24, r11
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <HLCD_void_send+0x4c>
  ca:	95 95       	asr	r25
  cc:	87 95       	ror	r24
  ce:	4a 95       	dec	r20
  d0:	e2 f7       	brpl	.-8      	; 0xca <HLCD_void_send+0x48>
  d2:	68 2f       	mov	r22, r24
  d4:	61 70       	andi	r22, 0x01	; 1
  d6:	fe 01       	movw	r30, r28
  d8:	e2 0f       	add	r30, r18
  da:	f3 1f       	adc	r31, r19
  dc:	84 81       	ldd	r24, Z+4	; 0x04
  de:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
  e2:	1f 5f       	subi	r17, 0xFF	; 255
  e4:	01 c0       	rjmp	.+2      	; 0xe8 <HLCD_void_send+0x66>
  e6:	10 e0       	ldi	r17, 0x00	; 0
  e8:	18 30       	cpi	r17, 0x08	; 8
  ea:	30 f3       	brcs	.-52     	; 0xb8 <HLCD_void_send+0x36>
  ec:	61 e0       	ldi	r22, 0x01	; 1
  ee:	8b 81       	ldd	r24, Y+3	; 0x03
  f0:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
  f4:	68 ee       	ldi	r22, 0xE8	; 232
  f6:	73 e0       	ldi	r23, 0x03	; 3
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 6f 03 	call	0x6de	; 0x6de <MDELAY_void_micro>
 100:	60 e0       	ldi	r22, 0x00	; 0
 102:	8b 81       	ldd	r24, Y+3	; 0x03
 104:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 108:	52 c0       	rjmp	.+164    	; 0x1ae <HLCD_void_send+0x12c>
 10a:	6b 2d       	mov	r22, r11
 10c:	66 1f       	adc	r22, r22
 10e:	66 27       	eor	r22, r22
 110:	66 1f       	adc	r22, r22
 112:	8c 81       	ldd	r24, Y+4	; 0x04
 114:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 118:	b6 fa       	bst	r11, 6
 11a:	66 27       	eor	r22, r22
 11c:	60 f9       	bld	r22, 0
 11e:	8d 81       	ldd	r24, Y+5	; 0x05
 120:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 124:	b5 fa       	bst	r11, 5
 126:	66 27       	eor	r22, r22
 128:	60 f9       	bld	r22, 0
 12a:	8e 81       	ldd	r24, Y+6	; 0x06
 12c:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 130:	b4 fa       	bst	r11, 4
 132:	66 27       	eor	r22, r22
 134:	60 f9       	bld	r22, 0
 136:	8f 81       	ldd	r24, Y+7	; 0x07
 138:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 13c:	61 e0       	ldi	r22, 0x01	; 1
 13e:	8b 81       	ldd	r24, Y+3	; 0x03
 140:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 144:	68 ee       	ldi	r22, 0xE8	; 232
 146:	73 e0       	ldi	r23, 0x03	; 3
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	0e 94 6f 03 	call	0x6de	; 0x6de <MDELAY_void_micro>
 150:	60 e0       	ldi	r22, 0x00	; 0
 152:	8b 81       	ldd	r24, Y+3	; 0x03
 154:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 158:	68 ee       	ldi	r22, 0xE8	; 232
 15a:	73 e0       	ldi	r23, 0x03	; 3
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 6f 03 	call	0x6de	; 0x6de <MDELAY_void_micro>
 164:	b3 fa       	bst	r11, 3
 166:	66 27       	eor	r22, r22
 168:	60 f9       	bld	r22, 0
 16a:	8c 81       	ldd	r24, Y+4	; 0x04
 16c:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 170:	b2 fa       	bst	r11, 2
 172:	66 27       	eor	r22, r22
 174:	60 f9       	bld	r22, 0
 176:	8d 81       	ldd	r24, Y+5	; 0x05
 178:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 17c:	b1 fa       	bst	r11, 1
 17e:	66 27       	eor	r22, r22
 180:	60 f9       	bld	r22, 0
 182:	8e 81       	ldd	r24, Y+6	; 0x06
 184:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 188:	6b 2d       	mov	r22, r11
 18a:	61 70       	andi	r22, 0x01	; 1
 18c:	8f 81       	ldd	r24, Y+7	; 0x07
 18e:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 192:	61 e0       	ldi	r22, 0x01	; 1
 194:	8b 81       	ldd	r24, Y+3	; 0x03
 196:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 19a:	68 ee       	ldi	r22, 0xE8	; 232
 19c:	73 e0       	ldi	r23, 0x03	; 3
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 6f 03 	call	0x6de	; 0x6de <MDELAY_void_micro>
 1a6:	60 e0       	ldi	r22, 0x00	; 0
 1a8:	8b 81       	ldd	r24, Y+3	; 0x03
 1aa:	0e 94 05 04 	call	0x80a	; 0x80a <MDIO_voidSetPinVal>
 1ae:	c7 01       	movw	r24, r14
 1b0:	b6 01       	movw	r22, r12
 1b2:	68 51       	subi	r22, 0x18	; 24
 1b4:	7c 4f       	sbci	r23, 0xFC	; 252
 1b6:	8f 4f       	sbci	r24, 0xFF	; 255
 1b8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ba:	0e 94 6f 03 	call	0x6de	; 0x6de <MDELAY_void_micro>
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	df 90       	pop	r13
 1cc:	cf 90       	pop	r12
 1ce:	bf 90       	pop	r11
 1d0:	af 90       	pop	r10
 1d2:	08 95       	ret

000001d4 <HLCD_HLCD_t_LcdCreate>:
 1d4:	9f 92       	push	r9
 1d6:	af 92       	push	r10
 1d8:	bf 92       	push	r11
 1da:	cf 92       	push	r12
 1dc:	df 92       	push	r13
 1de:	ef 92       	push	r14
 1e0:	ff 92       	push	r15
 1e2:	0f 93       	push	r16
 1e4:	1f 93       	push	r17
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	cd b7       	in	r28, 0x3d	; 61
 1ec:	de b7       	in	r29, 0x3e	; 62
 1ee:	2c 97       	sbiw	r28, 0x0c	; 12
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	f8 94       	cli
 1f4:	de bf       	out	0x3e, r29	; 62
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	cd bf       	out	0x3d, r28	; 61
 1fa:	6c 01       	movw	r12, r24
 1fc:	b6 2e       	mov	r11, r22
 1fe:	a4 2e       	mov	r10, r20
 200:	92 2e       	mov	r9, r18
 202:	78 01       	movw	r14, r16
 204:	68 ee       	ldi	r22, 0xE8	; 232
 206:	73 e0       	ldi	r23, 0x03	; 3
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	0e 94 6f 03 	call	0x6de	; 0x6de <MDELAY_void_micro>
 210:	9c 82       	std	Y+4, r9	; 0x04
 212:	ab 82       	std	Y+3, r10	; 0x03
 214:	ba 82       	std	Y+2, r11	; 0x02
 216:	61 e0       	ldi	r22, 0x01	; 1
 218:	89 2d       	mov	r24, r9
 21a:	0e 94 b1 03 	call	0x762	; 0x762 <MDIO_voidSetPinDir>
 21e:	61 e0       	ldi	r22, 0x01	; 1
 220:	8a 2d       	mov	r24, r10
 222:	0e 94 b1 03 	call	0x762	; 0x762 <MDIO_voidSetPinDir>
 226:	61 e0       	ldi	r22, 0x01	; 1
 228:	8b 2d       	mov	r24, r11
 22a:	0e 94 b1 03 	call	0x762	; 0x762 <MDIO_voidSetPinDir>
 22e:	10 e0       	ldi	r17, 0x00	; 0
 230:	12 c0       	rjmp	.+36     	; 0x256 <HLCD_HLCD_t_LcdCreate+0x82>
 232:	81 2f       	mov	r24, r17
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	f7 01       	movw	r30, r14
 238:	e8 0f       	add	r30, r24
 23a:	f9 1f       	adc	r31, r25
 23c:	20 81       	ld	r18, Z
 23e:	a5 e0       	ldi	r26, 0x05	; 5
 240:	b0 e0       	ldi	r27, 0x00	; 0
 242:	ac 0f       	add	r26, r28
 244:	bd 1f       	adc	r27, r29
 246:	a8 0f       	add	r26, r24
 248:	b9 1f       	adc	r27, r25
 24a:	2c 93       	st	X, r18
 24c:	61 e0       	ldi	r22, 0x01	; 1
 24e:	80 81       	ld	r24, Z
 250:	0e 94 b1 03 	call	0x762	; 0x762 <MDIO_voidSetPinDir>
 254:	1f 5f       	subi	r17, 0xFF	; 255
 256:	18 30       	cpi	r17, 0x08	; 8
 258:	60 f3       	brcs	.-40     	; 0x232 <HLCD_HLCD_t_LcdCreate+0x5e>
 25a:	89 81       	ldd	r24, Y+1	; 0x01
 25c:	80 66       	ori	r24, 0x60	; 96
 25e:	8f 77       	andi	r24, 0x7F	; 127
 260:	89 83       	std	Y+1, r24	; 0x01
 262:	17 e2       	ldi	r17, 0x27	; 39
 264:	e1 2e       	mov	r14, r17
 266:	f1 2c       	mov	r15, r1
 268:	00 e0       	ldi	r16, 0x00	; 0
 26a:	10 e0       	ldi	r17, 0x00	; 0
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	40 e0       	ldi	r20, 0x00	; 0
 270:	68 e3       	ldi	r22, 0x38	; 56
 272:	ce 01       	movw	r24, r28
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 27a:	89 81       	ldd	r24, Y+1	; 0x01
 27c:	83 7f       	andi	r24, 0xF3	; 243
 27e:	8f 7e       	andi	r24, 0xEF	; 239
 280:	89 83       	std	Y+1, r24	; 0x01
 282:	e1 2c       	mov	r14, r1
 284:	f1 2c       	mov	r15, r1
 286:	87 01       	movw	r16, r14
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	40 e0       	ldi	r20, 0x00	; 0
 28c:	68 e0       	ldi	r22, 0x08	; 8
 28e:	ce 01       	movw	r24, r28
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 296:	1a ef       	ldi	r17, 0xFA	; 250
 298:	e1 2e       	mov	r14, r17
 29a:	15 e0       	ldi	r17, 0x05	; 5
 29c:	f1 2e       	mov	r15, r17
 29e:	00 e0       	ldi	r16, 0x00	; 0
 2a0:	10 e0       	ldi	r17, 0x00	; 0
 2a2:	20 e0       	ldi	r18, 0x00	; 0
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	61 e0       	ldi	r22, 0x01	; 1
 2a8:	ce 01       	movw	r24, r28
 2aa:	01 96       	adiw	r24, 0x01	; 1
 2ac:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	62 e0       	ldi	r22, 0x02	; 2
 2b6:	ce 01       	movw	r24, r28
 2b8:	01 96       	adiw	r24, 0x01	; 1
 2ba:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 2be:	89 81       	ldd	r24, Y+1	; 0x01
 2c0:	81 60       	ori	r24, 0x01	; 1
 2c2:	8d 7f       	andi	r24, 0xFD	; 253
 2c4:	89 83       	std	Y+1, r24	; 0x01
 2c6:	17 e2       	ldi	r17, 0x27	; 39
 2c8:	e1 2e       	mov	r14, r17
 2ca:	f1 2c       	mov	r15, r1
 2cc:	00 e0       	ldi	r16, 0x00	; 0
 2ce:	10 e0       	ldi	r17, 0x00	; 0
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	66 e0       	ldi	r22, 0x06	; 6
 2d6:	ce 01       	movw	r24, r28
 2d8:	01 96       	adiw	r24, 0x01	; 1
 2da:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 2de:	8c e0       	ldi	r24, 0x0C	; 12
 2e0:	fe 01       	movw	r30, r28
 2e2:	31 96       	adiw	r30, 0x01	; 1
 2e4:	d6 01       	movw	r26, r12
 2e6:	01 90       	ld	r0, Z+
 2e8:	0d 92       	st	X+, r0
 2ea:	8a 95       	dec	r24
 2ec:	e1 f7       	brne	.-8      	; 0x2e6 <HLCD_HLCD_t_LcdCreate+0x112>
 2ee:	c6 01       	movw	r24, r12
 2f0:	2c 96       	adiw	r28, 0x0c	; 12
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	f8 94       	cli
 2f6:	de bf       	out	0x3e, r29	; 62
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	cd bf       	out	0x3d, r28	; 61
 2fc:	df 91       	pop	r29
 2fe:	cf 91       	pop	r28
 300:	1f 91       	pop	r17
 302:	0f 91       	pop	r16
 304:	ff 90       	pop	r15
 306:	ef 90       	pop	r14
 308:	df 90       	pop	r13
 30a:	cf 90       	pop	r12
 30c:	bf 90       	pop	r11
 30e:	af 90       	pop	r10
 310:	9f 90       	pop	r9
 312:	08 95       	ret

00000314 <HLCD_void_DisplayOn>:
 314:	ef 92       	push	r14
 316:	ff 92       	push	r15
 318:	0f 93       	push	r16
 31a:	1f 93       	push	r17
 31c:	fc 01       	movw	r30, r24
 31e:	90 81       	ld	r25, Z
 320:	94 60       	ori	r25, 0x04	; 4
 322:	90 83       	st	Z, r25
 324:	93 fb       	bst	r25, 3
 326:	66 27       	eor	r22, r22
 328:	60 f9       	bld	r22, 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	66 0f       	add	r22, r22
 32e:	77 1f       	adc	r23, r23
 330:	92 95       	swap	r25
 332:	91 70       	andi	r25, 0x01	; 1
 334:	6c 60       	ori	r22, 0x0C	; 12
 336:	69 2b       	or	r22, r25
 338:	e1 2c       	mov	r14, r1
 33a:	f1 2c       	mov	r15, r1
 33c:	87 01       	movw	r16, r14
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	cf 01       	movw	r24, r30
 344:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 348:	1f 91       	pop	r17
 34a:	0f 91       	pop	r16
 34c:	ff 90       	pop	r15
 34e:	ef 90       	pop	r14
 350:	08 95       	ret

00000352 <HLCD_void_WriteCharacter>:
 352:	ef 92       	push	r14
 354:	ff 92       	push	r15
 356:	0f 93       	push	r16
 358:	1f 93       	push	r17
 35a:	1b e2       	ldi	r17, 0x2B	; 43
 35c:	e1 2e       	mov	r14, r17
 35e:	f1 2c       	mov	r15, r1
 360:	00 e0       	ldi	r16, 0x00	; 0
 362:	10 e0       	ldi	r17, 0x00	; 0
 364:	20 e0       	ldi	r18, 0x00	; 0
 366:	41 e0       	ldi	r20, 0x01	; 1
 368:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	ff 90       	pop	r15
 372:	ef 90       	pop	r14
 374:	08 95       	ret

00000376 <HLCD_void_setCursor>:
 376:	ef 92       	push	r14
 378:	ff 92       	push	r15
 37a:	0f 93       	push	r16
 37c:	1f 93       	push	r17
 37e:	20 e4       	ldi	r18, 0x40	; 64
 380:	42 9f       	mul	r20, r18
 382:	60 0d       	add	r22, r0
 384:	11 24       	eor	r1, r1
 386:	60 68       	ori	r22, 0x80	; 128
 388:	17 e2       	ldi	r17, 0x27	; 39
 38a:	e1 2e       	mov	r14, r17
 38c:	f1 2c       	mov	r15, r1
 38e:	00 e0       	ldi	r16, 0x00	; 0
 390:	10 e0       	ldi	r17, 0x00	; 0
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	40 e0       	ldi	r20, 0x00	; 0
 396:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 39a:	1f 91       	pop	r17
 39c:	0f 91       	pop	r16
 39e:	ff 90       	pop	r15
 3a0:	ef 90       	pop	r14
 3a2:	08 95       	ret

000003a4 <HLCD_void_DisplayShiftRight>:
 3a4:	ef 92       	push	r14
 3a6:	ff 92       	push	r15
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	17 e2       	ldi	r17, 0x27	; 39
 3ae:	e1 2e       	mov	r14, r17
 3b0:	f1 2c       	mov	r15, r1
 3b2:	00 e0       	ldi	r16, 0x00	; 0
 3b4:	10 e0       	ldi	r17, 0x00	; 0
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	40 e0       	ldi	r20, 0x00	; 0
 3ba:	6c e1       	ldi	r22, 0x1C	; 28
 3bc:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 3c0:	1f 91       	pop	r17
 3c2:	0f 91       	pop	r16
 3c4:	ff 90       	pop	r15
 3c6:	ef 90       	pop	r14
 3c8:	08 95       	ret

000003ca <HLCD_void_DisplayShiftLeft>:
 3ca:	ef 92       	push	r14
 3cc:	ff 92       	push	r15
 3ce:	0f 93       	push	r16
 3d0:	1f 93       	push	r17
 3d2:	17 e2       	ldi	r17, 0x27	; 39
 3d4:	e1 2e       	mov	r14, r17
 3d6:	f1 2c       	mov	r15, r1
 3d8:	00 e0       	ldi	r16, 0x00	; 0
 3da:	10 e0       	ldi	r17, 0x00	; 0
 3dc:	20 e0       	ldi	r18, 0x00	; 0
 3de:	40 e0       	ldi	r20, 0x00	; 0
 3e0:	68 e1       	ldi	r22, 0x18	; 24
 3e2:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	ff 90       	pop	r15
 3ec:	ef 90       	pop	r14
 3ee:	08 95       	ret

000003f0 <HLCD_void_CreateChar>:

void HLCD_void_CreateChar(HLCD_t *A_HLCD_t_lcd, u8 A_u8_BlockIndex, u8 *A_u8_Array){
 3f0:	af 92       	push	r10
 3f2:	bf 92       	push	r11
 3f4:	cf 92       	push	r12
 3f6:	df 92       	push	r13
 3f8:	ef 92       	push	r14
 3fa:	ff 92       	push	r15
 3fc:	0f 93       	push	r16
 3fe:	1f 93       	push	r17
 400:	cf 93       	push	r28
 402:	6c 01       	movw	r12, r24
 404:	5a 01       	movw	r10, r20
	u8 L_u8_BlockAddress = A_u8_BlockIndex * HLCD_TOTAL_PATTERNS_NO;
 406:	66 0f       	add	r22, r22
 408:	66 0f       	add	r22, r22
 40a:	66 0f       	add	r22, r22
	u8 L_u8_iterator;
	
	HLCD_void_send(
 40c:	6f 73       	andi	r22, 0x3F	; 63
 40e:	60 64       	ori	r22, 0x40	; 64
 410:	17 e2       	ldi	r17, 0x27	; 39
 412:	e1 2e       	mov	r14, r17
 414:	f1 2c       	mov	r15, r1
 416:	00 e0       	ldi	r16, 0x00	; 0
 418:	10 e0       	ldi	r17, 0x00	; 0
 41a:	20 e0       	ldi	r18, 0x00	; 0
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	0e 94 41 00 	call	0x82	; 0x82 <HLCD_void_send>
		HLCD_SET_CGRAM_ADDRESS_CMD_RS,
		HLCD_SET_CGRAM_ADDRESS_CMD_RW,
		HLCD_SET_CGRAM_ADDRESS_CMD_TIME_US
	);
	
	for (L_u8_iterator =0 ;L_u8_iterator < HLCD_PATTERN_ROWS_NO;L_u8_iterator ++)
 422:	c0 e0       	ldi	r28, 0x00	; 0
 424:	08 c0       	rjmp	.+16     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
	{
		HLCD_void_WriteCharacter(A_HLCD_t_lcd,A_u8_Array[L_u8_iterator]);
 426:	f5 01       	movw	r30, r10
 428:	ec 0f       	add	r30, r28
 42a:	f1 1d       	adc	r31, r1
 42c:	60 81       	ld	r22, Z
 42e:	c6 01       	movw	r24, r12
 430:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_SET_CGRAM_ADDRESS_CMD_RS,
		HLCD_SET_CGRAM_ADDRESS_CMD_RW,
		HLCD_SET_CGRAM_ADDRESS_CMD_TIME_US
	);
	
	for (L_u8_iterator =0 ;L_u8_iterator < HLCD_PATTERN_ROWS_NO;L_u8_iterator ++)
 434:	cf 5f       	subi	r28, 0xFF	; 255
 436:	c8 30       	cpi	r28, 0x08	; 8
 438:	b0 f3       	brcs	.-20     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
	{
		HLCD_void_WriteCharacter(A_HLCD_t_lcd,A_u8_Array[L_u8_iterator]);
	}
	
	HLCD_void_setCursor(A_HLCD_t_lcd,0,0);
 43a:	40 e0       	ldi	r20, 0x00	; 0
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	c6 01       	movw	r24, r12
 440:	0e 94 bb 01 	call	0x376	; 0x376 <HLCD_void_setCursor>
	
}
 444:	cf 91       	pop	r28
 446:	1f 91       	pop	r17
 448:	0f 91       	pop	r16
 44a:	ff 90       	pop	r15
 44c:	ef 90       	pop	r14
 44e:	df 90       	pop	r13
 450:	cf 90       	pop	r12
 452:	bf 90       	pop	r11
 454:	af 90       	pop	r10
 456:	08 95       	ret

00000458 <main>:
#define E2 PinB4



int main(void)
{
 458:	cf 93       	push	r28
 45a:	df 93       	push	r29
 45c:	cd b7       	in	r28, 0x3d	; 61
 45e:	de b7       	in	r29, 0x3e	; 62
 460:	cc 54       	subi	r28, 0x4C	; 76
 462:	d1 09       	sbc	r29, r1
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	f8 94       	cli
 468:	de bf       	out	0x3e, r29	; 62
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	cd bf       	out	0x3d, r28	; 61
	MDIO_voidInit();
 46e:	0e 94 ad 03 	call	0x75a	; 0x75a <MDIO_voidInit>
	
	HLCD_t lcd1, lcd2;
	
	{
		Pin_t dataPins[]  ={PinA7,PinA6,PinA5,PinA4,PinA3,PinA2,PinA1,PinA0};
 472:	88 e0       	ldi	r24, 0x08	; 8
 474:	e0 e6       	ldi	r30, 0x60	; 96
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	de 01       	movw	r26, r28
 47a:	d9 96       	adiw	r26, 0x39	; 57
 47c:	01 90       	ld	r0, Z+
 47e:	0d 92       	st	X+, r0
 480:	8a 95       	dec	r24
 482:	e1 f7       	brne	.-8      	; 0x47c <main+0x24>
		lcd1 = HLCD_HLCD_t_LcdCreate(RS,RW,E1,dataPins);
 484:	8e 01       	movw	r16, r28
 486:	07 5c       	subi	r16, 0xC7	; 199
 488:	1f 4f       	sbci	r17, 0xFF	; 255
 48a:	23 eb       	ldi	r18, 0xB3	; 179
 48c:	42 eb       	ldi	r20, 0xB2	; 178
 48e:	61 eb       	ldi	r22, 0xB1	; 177
 490:	ce 01       	movw	r24, r28
 492:	8f 5b       	subi	r24, 0xBF	; 191
 494:	9f 4f       	sbci	r25, 0xFF	; 255
 496:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <HLCD_HLCD_t_LcdCreate>
 49a:	8c e0       	ldi	r24, 0x0C	; 12
 49c:	fe 01       	movw	r30, r28
 49e:	ef 5b       	subi	r30, 0xBF	; 191
 4a0:	ff 4f       	sbci	r31, 0xFF	; 255
 4a2:	de 01       	movw	r26, r28
 4a4:	11 96       	adiw	r26, 0x01	; 1
 4a6:	01 90       	ld	r0, Z+
 4a8:	0d 92       	st	X+, r0
 4aa:	8a 95       	dec	r24
 4ac:	e1 f7       	brne	.-8      	; 0x4a6 <main+0x4e>
		lcd2 = HLCD_HLCD_t_LcdCreate(RS,RW,E2,dataPins);
 4ae:	24 eb       	ldi	r18, 0xB4	; 180
 4b0:	42 eb       	ldi	r20, 0xB2	; 178
 4b2:	61 eb       	ldi	r22, 0xB1	; 177
 4b4:	ce 01       	movw	r24, r28
 4b6:	8f 5b       	subi	r24, 0xBF	; 191
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <HLCD_HLCD_t_LcdCreate>
 4be:	8c e0       	ldi	r24, 0x0C	; 12
 4c0:	fe 01       	movw	r30, r28
 4c2:	ef 5b       	subi	r30, 0xBF	; 191
 4c4:	ff 4f       	sbci	r31, 0xFF	; 255
 4c6:	de 01       	movw	r26, r28
 4c8:	1d 96       	adiw	r26, 0x0d	; 13
 4ca:	01 90       	ld	r0, Z+
 4cc:	0d 92       	st	X+, r0
 4ce:	8a 95       	dec	r24
 4d0:	e1 f7       	brne	.-8      	; 0x4ca <main+0x72>

		HLCD_void_DisplayOn(&lcd1);
 4d2:	ce 01       	movw	r24, r28
 4d4:	01 96       	adiw	r24, 0x01	; 1
 4d6:	0e 94 8a 01 	call	0x314	; 0x314 <HLCD_void_DisplayOn>
		HLCD_void_DisplayOn(&lcd2);
 4da:	ce 01       	movw	r24, r28
 4dc:	0d 96       	adiw	r24, 0x0d	; 13
 4de:	0e 94 8a 01 	call	0x314	; 0x314 <HLCD_void_DisplayOn>
		


		u8 cc0[] = HLCD_YOUSEF_AR_C1_5X8;
 4e2:	88 e0       	ldi	r24, 0x08	; 8
 4e4:	e8 e6       	ldi	r30, 0x68	; 104
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	de 01       	movw	r26, r28
 4ea:	d1 96       	adiw	r26, 0x31	; 49
 4ec:	01 90       	ld	r0, Z+
 4ee:	0d 92       	st	X+, r0
 4f0:	8a 95       	dec	r24
 4f2:	e1 f7       	brne	.-8      	; 0x4ec <main+0x94>
		u8 cc1[] = HLCD_YOUSEF_AR_C2_5X8;
 4f4:	88 e0       	ldi	r24, 0x08	; 8
 4f6:	e0 e7       	ldi	r30, 0x70	; 112
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	de 01       	movw	r26, r28
 4fc:	99 96       	adiw	r26, 0x29	; 41
 4fe:	01 90       	ld	r0, Z+
 500:	0d 92       	st	X+, r0
 502:	8a 95       	dec	r24
 504:	e1 f7       	brne	.-8      	; 0x4fe <main+0xa6>
		u8 cc2[] = HLCD_YOUSEF_AR_C3_5X8;
 506:	88 e0       	ldi	r24, 0x08	; 8
 508:	e8 e7       	ldi	r30, 0x78	; 120
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	de 01       	movw	r26, r28
 50e:	91 96       	adiw	r26, 0x21	; 33
 510:	01 90       	ld	r0, Z+
 512:	0d 92       	st	X+, r0
 514:	8a 95       	dec	r24
 516:	e1 f7       	brne	.-8      	; 0x510 <main+0xb8>
		u8 cc3[] = HLCD_YOUSEF_AR_C4_5X8;
 518:	88 e0       	ldi	r24, 0x08	; 8
 51a:	e0 e8       	ldi	r30, 0x80	; 128
 51c:	f0 e0       	ldi	r31, 0x00	; 0
 51e:	de 01       	movw	r26, r28
 520:	59 96       	adiw	r26, 0x19	; 25
 522:	01 90       	ld	r0, Z+
 524:	0d 92       	st	X+, r0
 526:	8a 95       	dec	r24
 528:	e1 f7       	brne	.-8      	; 0x522 <main+0xca>
		

		HLCD_void_CreateChar(&lcd1, 0,cc0);
 52a:	ae 01       	movw	r20, r28
 52c:	4f 5c       	subi	r20, 0xCF	; 207
 52e:	5f 4f       	sbci	r21, 0xFF	; 255
 530:	60 e0       	ldi	r22, 0x00	; 0
 532:	ce 01       	movw	r24, r28
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		HLCD_void_CreateChar(&lcd1, 1,cc1);
 53a:	ae 01       	movw	r20, r28
 53c:	47 5d       	subi	r20, 0xD7	; 215
 53e:	5f 4f       	sbci	r21, 0xFF	; 255
 540:	61 e0       	ldi	r22, 0x01	; 1
 542:	ce 01       	movw	r24, r28
 544:	01 96       	adiw	r24, 0x01	; 1
 546:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		HLCD_void_CreateChar(&lcd1, 2,cc2);
 54a:	ae 01       	movw	r20, r28
 54c:	4f 5d       	subi	r20, 0xDF	; 223
 54e:	5f 4f       	sbci	r21, 0xFF	; 255
 550:	62 e0       	ldi	r22, 0x02	; 2
 552:	ce 01       	movw	r24, r28
 554:	01 96       	adiw	r24, 0x01	; 1
 556:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		HLCD_void_CreateChar(&lcd1, 3,cc3);
 55a:	ae 01       	movw	r20, r28
 55c:	47 5e       	subi	r20, 0xE7	; 231
 55e:	5f 4f       	sbci	r21, 0xFF	; 255
 560:	63 e0       	ldi	r22, 0x03	; 3
 562:	ce 01       	movw	r24, r28
 564:	01 96       	adiw	r24, 0x01	; 1
 566:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		
		HLCD_void_CreateChar(&lcd2, 0,cc0);
 56a:	ae 01       	movw	r20, r28
 56c:	4f 5c       	subi	r20, 0xCF	; 207
 56e:	5f 4f       	sbci	r21, 0xFF	; 255
 570:	60 e0       	ldi	r22, 0x00	; 0
 572:	ce 01       	movw	r24, r28
 574:	0d 96       	adiw	r24, 0x0d	; 13
 576:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		HLCD_void_CreateChar(&lcd2, 1,cc1);
 57a:	ae 01       	movw	r20, r28
 57c:	47 5d       	subi	r20, 0xD7	; 215
 57e:	5f 4f       	sbci	r21, 0xFF	; 255
 580:	61 e0       	ldi	r22, 0x01	; 1
 582:	ce 01       	movw	r24, r28
 584:	0d 96       	adiw	r24, 0x0d	; 13
 586:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		HLCD_void_CreateChar(&lcd2, 2,cc2);
 58a:	ae 01       	movw	r20, r28
 58c:	4f 5d       	subi	r20, 0xDF	; 223
 58e:	5f 4f       	sbci	r21, 0xFF	; 255
 590:	62 e0       	ldi	r22, 0x02	; 2
 592:	ce 01       	movw	r24, r28
 594:	0d 96       	adiw	r24, 0x0d	; 13
 596:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		HLCD_void_CreateChar(&lcd2, 3,cc3);
 59a:	ae 01       	movw	r20, r28
 59c:	47 5e       	subi	r20, 0xE7	; 231
 59e:	5f 4f       	sbci	r21, 0xFF	; 255
 5a0:	63 e0       	ldi	r22, 0x03	; 3
 5a2:	ce 01       	movw	r24, r28
 5a4:	0d 96       	adiw	r24, 0x0d	; 13
 5a6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <HLCD_void_CreateChar>
		
				HLCD_void_setCursor(&lcd1,6,0);
 5aa:	40 e0       	ldi	r20, 0x00	; 0
 5ac:	66 e0       	ldi	r22, 0x06	; 6
 5ae:	ce 01       	movw	r24, r28
 5b0:	01 96       	adiw	r24, 0x01	; 1
 5b2:	0e 94 bb 01 	call	0x376	; 0x376 <HLCD_void_setCursor>
				HLCD_void_setCursor(&lcd2,5,0);
 5b6:	40 e0       	ldi	r20, 0x00	; 0
 5b8:	65 e0       	ldi	r22, 0x05	; 5
 5ba:	ce 01       	movw	r24, r28
 5bc:	0d 96       	adiw	r24, 0x0d	; 13
 5be:	0e 94 bb 01 	call	0x376	; 0x376 <HLCD_void_setCursor>
		
		HLCD_void_WriteCharacter(&lcd1, 3);
 5c2:	63 e0       	ldi	r22, 0x03	; 3
 5c4:	ce 01       	movw	r24, r28
 5c6:	01 96       	adiw	r24, 0x01	; 1
 5c8:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_void_WriteCharacter(&lcd1, 2);
 5cc:	62 e0       	ldi	r22, 0x02	; 2
 5ce:	ce 01       	movw	r24, r28
 5d0:	01 96       	adiw	r24, 0x01	; 1
 5d2:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_void_WriteCharacter(&lcd1, 1);
 5d6:	61 e0       	ldi	r22, 0x01	; 1
 5d8:	ce 01       	movw	r24, r28
 5da:	01 96       	adiw	r24, 0x01	; 1
 5dc:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_void_WriteCharacter(&lcd1, 0);
 5e0:	60 e0       	ldi	r22, 0x00	; 0
 5e2:	ce 01       	movw	r24, r28
 5e4:	01 96       	adiw	r24, 0x01	; 1
 5e6:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		
		HLCD_void_WriteCharacter(&lcd2, 3);
 5ea:	63 e0       	ldi	r22, 0x03	; 3
 5ec:	ce 01       	movw	r24, r28
 5ee:	0d 96       	adiw	r24, 0x0d	; 13
 5f0:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_void_WriteCharacter(&lcd2, 2);
 5f4:	62 e0       	ldi	r22, 0x02	; 2
 5f6:	ce 01       	movw	r24, r28
 5f8:	0d 96       	adiw	r24, 0x0d	; 13
 5fa:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_void_WriteCharacter(&lcd2, 1);
 5fe:	61 e0       	ldi	r22, 0x01	; 1
 600:	ce 01       	movw	r24, r28
 602:	0d 96       	adiw	r24, 0x0d	; 13
 604:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>
		HLCD_void_WriteCharacter(&lcd2, 0);
 608:	60 e0       	ldi	r22, 0x00	; 0
 60a:	ce 01       	movw	r24, r28
 60c:	0d 96       	adiw	r24, 0x0d	; 13
 60e:	0e 94 a9 01 	call	0x352	; 0x352 <HLCD_void_WriteCharacter>

	}
	
    while (1) 
    {
		HLCD_void_DisplayShiftLeft(&lcd1);
 612:	ce 01       	movw	r24, r28
 614:	01 96       	adiw	r24, 0x01	; 1
 616:	0e 94 e5 01 	call	0x3ca	; 0x3ca <HLCD_void_DisplayShiftLeft>
		HLCD_void_DisplayShiftRight(&lcd2);
 61a:	ce 01       	movw	r24, r28
 61c:	0d 96       	adiw	r24, 0x0d	; 13
 61e:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <HLCD_void_DisplayShiftRight>
		
		MDELAY_void_milli(500);
 622:	64 ef       	ldi	r22, 0xF4	; 244
 624:	71 e0       	ldi	r23, 0x01	; 1
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 26 03 	call	0x64c	; 0x64c <MDELAY_void_milli>
		
				HLCD_void_DisplayShiftRight(&lcd1);
 62e:	ce 01       	movw	r24, r28
 630:	01 96       	adiw	r24, 0x01	; 1
 632:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <HLCD_void_DisplayShiftRight>
				HLCD_void_DisplayShiftLeft(&lcd2);
 636:	ce 01       	movw	r24, r28
 638:	0d 96       	adiw	r24, 0x0d	; 13
 63a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <HLCD_void_DisplayShiftLeft>
				
						MDELAY_void_milli(500);
 63e:	64 ef       	ldi	r22, 0xF4	; 244
 640:	71 e0       	ldi	r23, 0x01	; 1
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 26 03 	call	0x64c	; 0x64c <MDELAY_void_milli>
 64a:	e3 cf       	rjmp	.-58     	; 0x612 <main+0x1ba>

0000064c <MDELAY_void_milli>:
#include "../../LIB/STD_TYPES.h"

#include "DELAY_interface.h"

void MDELAY_void_milli(u32 A_u32_ms){
	while(A_u32_ms>0){
 64c:	41 c0       	rjmp	.+130    	; 0x6d0 <MDELAY_void_milli+0x84>
		if(A_u32_ms >= 1000){
 64e:	68 3e       	cpi	r22, 0xE8	; 232
 650:	23 e0       	ldi	r18, 0x03	; 3
 652:	72 07       	cpc	r23, r18
 654:	81 05       	cpc	r24, r1
 656:	91 05       	cpc	r25, r1
 658:	70 f0       	brcs	.+28     	; 0x676 <MDELAY_void_milli+0x2a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 65a:	3f ef       	ldi	r19, 0xFF	; 255
 65c:	49 e6       	ldi	r20, 0x69	; 105
 65e:	e8 e1       	ldi	r30, 0x18	; 24
 660:	31 50       	subi	r19, 0x01	; 1
 662:	40 40       	sbci	r20, 0x00	; 0
 664:	e0 40       	sbci	r30, 0x00	; 0
 666:	e1 f7       	brne	.-8      	; 0x660 <MDELAY_void_milli+0x14>
 668:	00 c0       	rjmp	.+0      	; 0x66a <MDELAY_void_milli+0x1e>
 66a:	00 00       	nop
			_delay_ms(1000);
			A_u32_ms -= 1000;
 66c:	68 5e       	subi	r22, 0xE8	; 232
 66e:	73 40       	sbci	r23, 0x03	; 3
 670:	81 09       	sbc	r24, r1
 672:	91 09       	sbc	r25, r1
 674:	2d c0       	rjmp	.+90     	; 0x6d0 <MDELAY_void_milli+0x84>
		}
		else if(A_u32_ms >= 100){
 676:	64 36       	cpi	r22, 0x64	; 100
 678:	71 05       	cpc	r23, r1
 67a:	81 05       	cpc	r24, r1
 67c:	91 05       	cpc	r25, r1
 67e:	70 f0       	brcs	.+28     	; 0x69c <MDELAY_void_milli+0x50>
 680:	ff ef       	ldi	r31, 0xFF	; 255
 682:	20 e7       	ldi	r18, 0x70	; 112
 684:	32 e0       	ldi	r19, 0x02	; 2
 686:	f1 50       	subi	r31, 0x01	; 1
 688:	20 40       	sbci	r18, 0x00	; 0
 68a:	30 40       	sbci	r19, 0x00	; 0
 68c:	e1 f7       	brne	.-8      	; 0x686 <MDELAY_void_milli+0x3a>
 68e:	00 c0       	rjmp	.+0      	; 0x690 <MDELAY_void_milli+0x44>
 690:	00 00       	nop
			_delay_ms(100);
			A_u32_ms -= 100;
 692:	64 56       	subi	r22, 0x64	; 100
 694:	71 09       	sbc	r23, r1
 696:	81 09       	sbc	r24, r1
 698:	91 09       	sbc	r25, r1
 69a:	1a c0       	rjmp	.+52     	; 0x6d0 <MDELAY_void_milli+0x84>
		}else if(A_u32_ms >= 10){
 69c:	6a 30       	cpi	r22, 0x0A	; 10
 69e:	71 05       	cpc	r23, r1
 6a0:	81 05       	cpc	r24, r1
 6a2:	91 05       	cpc	r25, r1
 6a4:	58 f0       	brcs	.+22     	; 0x6bc <MDELAY_void_milli+0x70>
 6a6:	ef e1       	ldi	r30, 0x1F	; 31
 6a8:	fe e4       	ldi	r31, 0x4E	; 78
 6aa:	31 97       	sbiw	r30, 0x01	; 1
 6ac:	f1 f7       	brne	.-4      	; 0x6aa <MDELAY_void_milli+0x5e>
 6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <MDELAY_void_milli+0x64>
 6b0:	00 00       	nop
			_delay_ms(10);
			A_u32_ms -= 10;
 6b2:	6a 50       	subi	r22, 0x0A	; 10
 6b4:	71 09       	sbc	r23, r1
 6b6:	81 09       	sbc	r24, r1
 6b8:	91 09       	sbc	r25, r1
 6ba:	0a c0       	rjmp	.+20     	; 0x6d0 <MDELAY_void_milli+0x84>
 6bc:	ef ec       	ldi	r30, 0xCF	; 207
 6be:	f7 e0       	ldi	r31, 0x07	; 7
 6c0:	31 97       	sbiw	r30, 0x01	; 1
 6c2:	f1 f7       	brne	.-4      	; 0x6c0 <MDELAY_void_milli+0x74>
 6c4:	00 c0       	rjmp	.+0      	; 0x6c6 <MDELAY_void_milli+0x7a>
 6c6:	00 00       	nop
		}else{
			_delay_ms(1);
			A_u32_ms -= 1;
 6c8:	61 50       	subi	r22, 0x01	; 1
 6ca:	71 09       	sbc	r23, r1
 6cc:	81 09       	sbc	r24, r1
 6ce:	91 09       	sbc	r25, r1
#include "../../LIB/STD_TYPES.h"

#include "DELAY_interface.h"

void MDELAY_void_milli(u32 A_u32_ms){
	while(A_u32_ms>0){
 6d0:	61 15       	cp	r22, r1
 6d2:	71 05       	cpc	r23, r1
 6d4:	81 05       	cpc	r24, r1
 6d6:	91 05       	cpc	r25, r1
 6d8:	09 f0       	breq	.+2      	; 0x6dc <MDELAY_void_milli+0x90>
 6da:	b9 cf       	rjmp	.-142    	; 0x64e <MDELAY_void_milli+0x2>
		}else{
			_delay_ms(1);
			A_u32_ms -= 1;
		}
	}
}
 6dc:	08 95       	ret

000006de <MDELAY_void_micro>:

void MDELAY_void_micro(u32 A_u32_us){
	while(A_u32_us>0){
 6de:	37 c0       	rjmp	.+110    	; 0x74e <MDELAY_void_micro+0x70>
		if(A_u32_us >= 1000){
 6e0:	68 3e       	cpi	r22, 0xE8	; 232
 6e2:	23 e0       	ldi	r18, 0x03	; 3
 6e4:	72 07       	cpc	r23, r18
 6e6:	81 05       	cpc	r24, r1
 6e8:	91 05       	cpc	r25, r1
 6ea:	58 f0       	brcs	.+22     	; 0x702 <MDELAY_void_micro+0x24>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ec:	ef ec       	ldi	r30, 0xCF	; 207
 6ee:	f7 e0       	ldi	r31, 0x07	; 7
 6f0:	31 97       	sbiw	r30, 0x01	; 1
 6f2:	f1 f7       	brne	.-4      	; 0x6f0 <MDELAY_void_micro+0x12>
 6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <MDELAY_void_micro+0x18>
 6f6:	00 00       	nop
			_delay_us(1000);
			A_u32_us -= 1000;
 6f8:	68 5e       	subi	r22, 0xE8	; 232
 6fa:	73 40       	sbci	r23, 0x03	; 3
 6fc:	81 09       	sbc	r24, r1
 6fe:	91 09       	sbc	r25, r1
 700:	26 c0       	rjmp	.+76     	; 0x74e <MDELAY_void_micro+0x70>
		}
		else if(A_u32_us >= 100){
 702:	64 36       	cpi	r22, 0x64	; 100
 704:	71 05       	cpc	r23, r1
 706:	81 05       	cpc	r24, r1
 708:	91 05       	cpc	r25, r1
 70a:	58 f0       	brcs	.+22     	; 0x722 <MDELAY_void_micro+0x44>
 70c:	e7 ec       	ldi	r30, 0xC7	; 199
 70e:	f0 e0       	ldi	r31, 0x00	; 0
 710:	31 97       	sbiw	r30, 0x01	; 1
 712:	f1 f7       	brne	.-4      	; 0x710 <MDELAY_void_micro+0x32>
 714:	00 c0       	rjmp	.+0      	; 0x716 <MDELAY_void_micro+0x38>
 716:	00 00       	nop
			_delay_us(100);
			A_u32_us -= 100;
 718:	64 56       	subi	r22, 0x64	; 100
 71a:	71 09       	sbc	r23, r1
 71c:	81 09       	sbc	r24, r1
 71e:	91 09       	sbc	r25, r1
 720:	16 c0       	rjmp	.+44     	; 0x74e <MDELAY_void_micro+0x70>
		}else if(A_u32_us >= 10){
 722:	6a 30       	cpi	r22, 0x0A	; 10
 724:	71 05       	cpc	r23, r1
 726:	81 05       	cpc	r24, r1
 728:	91 05       	cpc	r25, r1
 72a:	48 f0       	brcs	.+18     	; 0x73e <MDELAY_void_micro+0x60>
 72c:	fa e1       	ldi	r31, 0x1A	; 26
 72e:	fa 95       	dec	r31
 730:	f1 f7       	brne	.-4      	; 0x72e <MDELAY_void_micro+0x50>
 732:	00 c0       	rjmp	.+0      	; 0x734 <MDELAY_void_micro+0x56>
			_delay_us(10);
			A_u32_us -= 10;
 734:	6a 50       	subi	r22, 0x0A	; 10
 736:	71 09       	sbc	r23, r1
 738:	81 09       	sbc	r24, r1
 73a:	91 09       	sbc	r25, r1
 73c:	08 c0       	rjmp	.+16     	; 0x74e <MDELAY_void_micro+0x70>
 73e:	22 e0       	ldi	r18, 0x02	; 2
 740:	2a 95       	dec	r18
 742:	f1 f7       	brne	.-4      	; 0x740 <MDELAY_void_micro+0x62>
 744:	00 c0       	rjmp	.+0      	; 0x746 <MDELAY_void_micro+0x68>
		}else{
			_delay_us(1);
			A_u32_us -= 1;
 746:	61 50       	subi	r22, 0x01	; 1
 748:	71 09       	sbc	r23, r1
 74a:	81 09       	sbc	r24, r1
 74c:	91 09       	sbc	r25, r1
		}
	}
}

void MDELAY_void_micro(u32 A_u32_us){
	while(A_u32_us>0){
 74e:	61 15       	cp	r22, r1
 750:	71 05       	cpc	r23, r1
 752:	81 05       	cpc	r24, r1
 754:	91 05       	cpc	r25, r1
 756:	21 f6       	brne	.-120    	; 0x6e0 <MDELAY_void_micro+0x2>
		}else{
			_delay_us(1);
			A_u32_us -= 1;
		}
	}
 758:	08 95       	ret

0000075a <MDIO_voidInit>:

void MDIO_voidInit(void){
	#if MDIO_ENABLE_PULL_UP_CIRCUIT == 0
		SET_BIT(SFIOR_REG,PUD_BIT);
	#else
		CLR_BIT(SFIOR_REG,PUD_BIT);
 75a:	80 b7       	in	r24, 0x30	; 48
 75c:	8b 7f       	andi	r24, 0xFB	; 251
 75e:	80 bf       	out	0x30, r24	; 48
 760:	08 95       	ret

00000762 <MDIO_voidSetPinDir>:
	#endif
}


void MDIO_voidSetPinDir(Pin_t A_Pin_tPin, u8 A_u8Dir){
	u8 L_portNum = A_Pin_tPin & 0xF0;
 762:	98 2f       	mov	r25, r24
 764:	90 7f       	andi	r25, 0xF0	; 240
	u8 L_pinNum = A_Pin_tPin & 0x0F;
 766:	8f 70       	andi	r24, 0x0F	; 15
	
	volatile u8 *L_dirReg,*L_valReg;
	
	switch (L_portNum)
 768:	90 3b       	cpi	r25, 0xB0	; 176
 76a:	49 f0       	breq	.+18     	; 0x77e <MDIO_voidSetPinDir+0x1c>
 76c:	18 f4       	brcc	.+6      	; 0x774 <MDIO_voidSetPinDir+0x12>
 76e:	90 3a       	cpi	r25, 0xA0	; 160
 770:	a9 f0       	breq	.+42     	; 0x79c <MDIO_voidSetPinDir+0x3a>
 772:	18 c0       	rjmp	.+48     	; 0x7a4 <MDIO_voidSetPinDir+0x42>
 774:	90 3c       	cpi	r25, 0xC0	; 192
 776:	41 f0       	breq	.+16     	; 0x788 <MDIO_voidSetPinDir+0x26>
 778:	90 3d       	cpi	r25, 0xD0	; 208
 77a:	59 f0       	breq	.+22     	; 0x792 <MDIO_voidSetPinDir+0x30>
 77c:	13 c0       	rjmp	.+38     	; 0x7a4 <MDIO_voidSetPinDir+0x42>
	{
		case MDIO_PORT_A_NUM:
				L_dirReg = &DDRA_REG; L_valReg = &PORTA_REG;
			break;
		case MDIO_PORT_B_NUM:
						L_dirReg = &DDRB_REG; L_valReg = &PORTB_REG;
 77e:	a8 e3       	ldi	r26, 0x38	; 56
 780:	b0 e0       	ldi	r27, 0x00	; 0
 782:	e7 e3       	ldi	r30, 0x37	; 55
 784:	f0 e0       	ldi	r31, 0x00	; 0

			break;		
 786:	0e c0       	rjmp	.+28     	; 0x7a4 <MDIO_voidSetPinDir+0x42>
		case MDIO_PORT_C_NUM:
						L_dirReg = &DDRC_REG; L_valReg = &PORTC_REG;
 788:	a5 e3       	ldi	r26, 0x35	; 53
 78a:	b0 e0       	ldi	r27, 0x00	; 0
 78c:	e4 e3       	ldi	r30, 0x34	; 52
 78e:	f0 e0       	ldi	r31, 0x00	; 0

			break;		
 790:	09 c0       	rjmp	.+18     	; 0x7a4 <MDIO_voidSetPinDir+0x42>
		case MDIO_PORT_D_NUM:
						L_dirReg = &DDRD_REG; L_valReg = &PORTD_REG;
 792:	a2 e3       	ldi	r26, 0x32	; 50
 794:	b0 e0       	ldi	r27, 0x00	; 0
 796:	e1 e3       	ldi	r30, 0x31	; 49
 798:	f0 e0       	ldi	r31, 0x00	; 0

			break;
 79a:	04 c0       	rjmp	.+8      	; 0x7a4 <MDIO_voidSetPinDir+0x42>
	volatile u8 *L_dirReg,*L_valReg;
	
	switch (L_portNum)
	{
		case MDIO_PORT_A_NUM:
				L_dirReg = &DDRA_REG; L_valReg = &PORTA_REG;
 79c:	ab e3       	ldi	r26, 0x3B	; 59
 79e:	b0 e0       	ldi	r27, 0x00	; 0
 7a0:	ea e3       	ldi	r30, 0x3A	; 58
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
						L_dirReg = &DDRD_REG; L_valReg = &PORTD_REG;

			break;
		}
		
		switch(A_u8Dir){
 7a4:	61 30       	cpi	r22, 0x01	; 1
 7a6:	91 f0       	breq	.+36     	; 0x7cc <MDIO_voidSetPinDir+0x6a>
 7a8:	18 f0       	brcs	.+6      	; 0x7b0 <MDIO_voidSetPinDir+0x4e>
 7aa:	62 30       	cpi	r22, 0x02	; 2
 7ac:	e1 f0       	breq	.+56     	; 0x7e6 <MDIO_voidSetPinDir+0x84>
 7ae:	08 95       	ret
			case INPUT: 
				CLR_BIT(*L_dirReg,L_pinNum) ;
 7b0:	40 81       	ld	r20, Z
 7b2:	21 e0       	ldi	r18, 0x01	; 1
 7b4:	30 e0       	ldi	r19, 0x00	; 0
 7b6:	b9 01       	movw	r22, r18
 7b8:	02 c0       	rjmp	.+4      	; 0x7be <MDIO_voidSetPinDir+0x5c>
 7ba:	66 0f       	add	r22, r22
 7bc:	77 1f       	adc	r23, r23
 7be:	8a 95       	dec	r24
 7c0:	e2 f7       	brpl	.-8      	; 0x7ba <MDIO_voidSetPinDir+0x58>
 7c2:	cb 01       	movw	r24, r22
 7c4:	80 95       	com	r24
 7c6:	84 23       	and	r24, r20
 7c8:	80 83       	st	Z, r24
				break;
 7ca:	08 95       	ret
			case OUTPUT: 
				SET_BIT(*L_dirReg,L_pinNum) ;
 7cc:	40 81       	ld	r20, Z
 7ce:	21 e0       	ldi	r18, 0x01	; 1
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	b9 01       	movw	r22, r18
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <MDIO_voidSetPinDir+0x78>
 7d6:	66 0f       	add	r22, r22
 7d8:	77 1f       	adc	r23, r23
 7da:	8a 95       	dec	r24
 7dc:	e2 f7       	brpl	.-8      	; 0x7d6 <MDIO_voidSetPinDir+0x74>
 7de:	cb 01       	movw	r24, r22
 7e0:	84 2b       	or	r24, r20
 7e2:	80 83       	st	Z, r24
				break;
 7e4:	08 95       	ret
			case INPUT_PULL_UP: 
				CLR_BIT(*L_dirReg,L_pinNum);
 7e6:	40 81       	ld	r20, Z
 7e8:	21 e0       	ldi	r18, 0x01	; 1
 7ea:	30 e0       	ldi	r19, 0x00	; 0
 7ec:	b9 01       	movw	r22, r18
 7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <MDIO_voidSetPinDir+0x92>
 7f0:	66 0f       	add	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	8a 95       	dec	r24
 7f6:	e2 f7       	brpl	.-8      	; 0x7f0 <MDIO_voidSetPinDir+0x8e>
 7f8:	cb 01       	movw	r24, r22
 7fa:	96 2f       	mov	r25, r22
 7fc:	90 95       	com	r25
 7fe:	94 23       	and	r25, r20
 800:	90 83       	st	Z, r25
				SET_BIT(*L_valReg,L_pinNum);
 802:	9c 91       	ld	r25, X
 804:	89 2b       	or	r24, r25
 806:	8c 93       	st	X, r24
 808:	08 95       	ret

0000080a <MDIO_voidSetPinVal>:
				break;
		}
	
}
void MDIO_voidSetPinVal(Pin_t A_Pin_tPin, u8 A_u8Val){
	u8 L_portNum = A_Pin_tPin & 0xF0;
 80a:	98 2f       	mov	r25, r24
 80c:	90 7f       	andi	r25, 0xF0	; 240
	u8 L_pinNum = A_Pin_tPin & 0x0F;
 80e:	8f 70       	andi	r24, 0x0F	; 15
	
	volatile  u8 *L_dirReg,*L_valReg;
	
	switch (L_portNum)
 810:	90 3b       	cpi	r25, 0xB0	; 176
 812:	49 f0       	breq	.+18     	; 0x826 <MDIO_voidSetPinVal+0x1c>
 814:	18 f4       	brcc	.+6      	; 0x81c <MDIO_voidSetPinVal+0x12>
 816:	90 3a       	cpi	r25, 0xA0	; 160
 818:	79 f0       	breq	.+30     	; 0x838 <MDIO_voidSetPinVal+0x2e>
 81a:	10 c0       	rjmp	.+32     	; 0x83c <MDIO_voidSetPinVal+0x32>
 81c:	90 3c       	cpi	r25, 0xC0	; 192
 81e:	31 f0       	breq	.+12     	; 0x82c <MDIO_voidSetPinVal+0x22>
 820:	90 3d       	cpi	r25, 0xD0	; 208
 822:	39 f0       	breq	.+14     	; 0x832 <MDIO_voidSetPinVal+0x28>
 824:	0b c0       	rjmp	.+22     	; 0x83c <MDIO_voidSetPinVal+0x32>
	{
		case MDIO_PORT_A_NUM:
		L_dirReg = &DDRA_REG; L_valReg = &PORTA_REG;
		break;
		case MDIO_PORT_B_NUM:
		L_dirReg = &DDRB_REG; L_valReg = &PORTB_REG;
 826:	e8 e3       	ldi	r30, 0x38	; 56
 828:	f0 e0       	ldi	r31, 0x00	; 0

		break;
 82a:	08 c0       	rjmp	.+16     	; 0x83c <MDIO_voidSetPinVal+0x32>
		case MDIO_PORT_C_NUM:
		L_dirReg = &DDRC_REG; L_valReg = &PORTC_REG;
 82c:	e5 e3       	ldi	r30, 0x35	; 53
 82e:	f0 e0       	ldi	r31, 0x00	; 0

		break;
 830:	05 c0       	rjmp	.+10     	; 0x83c <MDIO_voidSetPinVal+0x32>
		case MDIO_PORT_D_NUM:
		L_dirReg = &DDRD_REG; L_valReg = &PORTD_REG;
 832:	e2 e3       	ldi	r30, 0x32	; 50
 834:	f0 e0       	ldi	r31, 0x00	; 0

		break;
 836:	02 c0       	rjmp	.+4      	; 0x83c <MDIO_voidSetPinVal+0x32>
	volatile  u8 *L_dirReg,*L_valReg;
	
	switch (L_portNum)
	{
		case MDIO_PORT_A_NUM:
		L_dirReg = &DDRA_REG; L_valReg = &PORTA_REG;
 838:	eb e3       	ldi	r30, 0x3B	; 59
 83a:	f0 e0       	ldi	r31, 0x00	; 0
		L_dirReg = &DDRD_REG; L_valReg = &PORTD_REG;

		break;
	}
	
	switch(A_u8Val){
 83c:	66 23       	and	r22, r22
 83e:	19 f0       	breq	.+6      	; 0x846 <MDIO_voidSetPinVal+0x3c>
 840:	61 30       	cpi	r22, 0x01	; 1
 842:	79 f0       	breq	.+30     	; 0x862 <__stack+0x3>
 844:	08 95       	ret
		case LOW:
		CLR_BIT(*L_valReg,L_pinNum) ;
 846:	40 81       	ld	r20, Z
 848:	21 e0       	ldi	r18, 0x01	; 1
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	b9 01       	movw	r22, r18
 84e:	02 c0       	rjmp	.+4      	; 0x854 <MDIO_voidSetPinVal+0x4a>
 850:	66 0f       	add	r22, r22
 852:	77 1f       	adc	r23, r23
 854:	8a 95       	dec	r24
 856:	e2 f7       	brpl	.-8      	; 0x850 <MDIO_voidSetPinVal+0x46>
 858:	cb 01       	movw	r24, r22
 85a:	80 95       	com	r24
 85c:	84 23       	and	r24, r20
 85e:	80 83       	st	Z, r24
		break;
 860:	08 95       	ret
		case HIGH:
		SET_BIT(*L_valReg,L_pinNum) ;
 862:	40 81       	ld	r20, Z
 864:	21 e0       	ldi	r18, 0x01	; 1
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	b9 01       	movw	r22, r18
 86a:	02 c0       	rjmp	.+4      	; 0x870 <__stack+0x11>
 86c:	66 0f       	add	r22, r22
 86e:	77 1f       	adc	r23, r23
 870:	8a 95       	dec	r24
 872:	e2 f7       	brpl	.-8      	; 0x86c <__stack+0xd>
 874:	cb 01       	movw	r24, r22
 876:	84 2b       	or	r24, r20
 878:	80 83       	st	Z, r24
 87a:	08 95       	ret

0000087c <_exit>:
 87c:	f8 94       	cli

0000087e <__stop_program>:
 87e:	ff cf       	rjmp	.-2      	; 0x87e <__stop_program>
