
LCD_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000440  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000004b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014ff  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000903  00000000  00000000  00001b9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000092b  00000000  00000000  000024a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000358  00000000  00000000  00002dd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000992  00000000  00000000  00003128  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000939  00000000  00000000  00003aba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000043f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 9f 01 	jmp	0x33e	; 0x33e <__vector_1>
   8:	0c 94 c8 01 	jmp	0x390	; 0x390 <__vector_2>
   c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e4       	ldi	r30, 0x40	; 64
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 69 00 	call	0xd2	; 0xd2 <main>
  8a:	0c 94 1e 02 	jmp	0x43c	; 0x43c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <HLED_HLed_t_Create>:
void HLED_void_TurnOff(HLed_t *A_Pin_t_pin){
	switch(A_Pin_t_pin->polarity){
		case HLED_ActiveHigh:
		MDIO_voidSetPinVal(A_Pin_t_pin->pin,LOW); break;
		case HLED_ActiveLow:
		MDIO_voidSetPinVal(A_Pin_t_pin->pin,HIGH); break;
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	c8 2f       	mov	r28, r24
  98:	d6 2f       	mov	r29, r22
  9a:	61 e0       	ldi	r22, 0x01	; 1
  9c:	0e 94 a5 00 	call	0x14a	; 0x14a <MDIO_voidSetPinDir>
  a0:	8c 2f       	mov	r24, r28
  a2:	9d 2f       	mov	r25, r29
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <HLED_void_TurnToggle>:
	}
}
	
void HLED_void_TurnToggle(HLed_t *A_Pin_t_pin){
			MDIO_voidTogPinVal(A_Pin_t_pin->pin);
  aa:	fc 01       	movw	r30, r24
  ac:	80 81       	ld	r24, Z
  ae:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <MDIO_voidTogPinVal>
  b2:	08 95       	ret

000000b4 <cb0>:
#include "HAL/KEYPAD/KEYPAD_interface.h"

HLed_t l1,l2,l3;

void cb0(void){
	HLED_void_TurnToggle(&l1);
  b4:	8a e6       	ldi	r24, 0x6A	; 106
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	0e 94 55 00 	call	0xaa	; 0xaa <HLED_void_TurnToggle>
  bc:	08 95       	ret

000000be <cb1>:
}

void cb1(void){
	HLED_void_TurnToggle(&l2);
  be:	86 e6       	ldi	r24, 0x66	; 102
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 55 00 	call	0xaa	; 0xaa <HLED_void_TurnToggle>
  c6:	08 95       	ret

000000c8 <cb2>:
}
void cb2(void){
	HLED_void_TurnToggle(&l3);
  c8:	88 e6       	ldi	r24, 0x68	; 104
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 55 00 	call	0xaa	; 0xaa <HLED_void_TurnToggle>
  d0:	08 95       	ret

000000d2 <main>:
}


int main(void)
{
	MGI_void_Enable();
  d2:	0e 94 1a 02 	call	0x434	; 0x434 <MGI_void_Enable>
	
	MEXT_INT_0_voidInit();
  d6:	0e 94 20 01 	call	0x240	; 0x240 <MEXT_INT_0_voidInit>
	MEXT_INT_0_voidEnable();
  da:	0e 94 25 01 	call	0x24a	; 0x24a <MEXT_INT_0_voidEnable>
	MEXT_INT_0_voidSenseControl(MEXT_INT_0_Sense_LowLevel);
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	0e 94 29 01 	call	0x252	; 0x252 <MEXT_INT_0_voidSenseControl>
	
		
		MEXT_INT_1_voidInit();
  e4:	0e 94 52 01 	call	0x2a4	; 0x2a4 <MEXT_INT_1_voidInit>
		MEXT_INT_1_voidEnable();
  e8:	0e 94 57 01 	call	0x2ae	; 0x2ae <MEXT_INT_1_voidEnable>
		MEXT_INT_1_voidSenseControl(MEXT_INT_1_Sense_LowLevel);
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MEXT_INT_1_voidSenseControl>
		
		
			
			MEXT_INT_2_voidInit();
  f2:	0e 94 84 01 	call	0x308	; 0x308 <MEXT_INT_2_voidInit>
			MEXT_INT_2_voidEnable();
  f6:	0e 94 89 01 	call	0x312	; 0x312 <MEXT_INT_2_voidEnable>
			MEXT_INT_2_voidSenseControl(MEXT_INT_2_Sense_RisingEdge);
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	0e 94 8d 01 	call	0x31a	; 0x31a <MEXT_INT_2_voidSenseControl>
			
	
	l1 = HLED_HLed_t_Create(PinA0,HLED_ActiveHigh);
 100:	61 e0       	ldi	r22, 0x01	; 1
 102:	80 ea       	ldi	r24, 0xA0	; 160
 104:	0e 94 49 00 	call	0x92	; 0x92 <HLED_HLed_t_Create>
 108:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <l1+0x1>
 10c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <l1>
	l2 = HLED_HLed_t_Create(PinA1,HLED_ActiveHigh);
 110:	61 e0       	ldi	r22, 0x01	; 1
 112:	81 ea       	ldi	r24, 0xA1	; 161
 114:	0e 94 49 00 	call	0x92	; 0x92 <HLED_HLed_t_Create>
 118:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <l2+0x1>
 11c:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <l2>
	l3 = HLED_HLed_t_Create(PinA2,HLED_ActiveHigh);
 120:	61 e0       	ldi	r22, 0x01	; 1
 122:	82 ea       	ldi	r24, 0xA2	; 162
 124:	0e 94 49 00 	call	0x92	; 0x92 <HLED_HLed_t_Create>
 128:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <l3+0x1>
 12c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <l3>

	MEXT_INT_0_voidSetCallback(cb0);
 130:	8a e5       	ldi	r24, 0x5A	; 90
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 4d 01 	call	0x29a	; 0x29a <MEXT_INT_0_voidSetCallback>
		MEXT_INT_1_voidSetCallback(cb1);
 138:	8f e5       	ldi	r24, 0x5F	; 95
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 7f 01 	call	0x2fe	; 0x2fe <MEXT_INT_1_voidSetCallback>
	MEXT_INT_2_voidSetCallback(cb2);
 140:	84 e6       	ldi	r24, 0x64	; 100
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 9a 01 	call	0x334	; 0x334 <MEXT_INT_2_voidSetCallback>
 148:	ff cf       	rjmp	.-2      	; 0x148 <main+0x76>

0000014a <MDIO_voidSetPinDir>:
		break;
		
	}
	
	return 	L_returnVal ;
}
 14a:	98 2f       	mov	r25, r24
 14c:	90 7f       	andi	r25, 0xF0	; 240
 14e:	8f 70       	andi	r24, 0x0F	; 15
 150:	90 3b       	cpi	r25, 0xB0	; 176
 152:	49 f0       	breq	.+18     	; 0x166 <MDIO_voidSetPinDir+0x1c>
 154:	18 f4       	brcc	.+6      	; 0x15c <MDIO_voidSetPinDir+0x12>
 156:	90 3a       	cpi	r25, 0xA0	; 160
 158:	a9 f0       	breq	.+42     	; 0x184 <MDIO_voidSetPinDir+0x3a>
 15a:	18 c0       	rjmp	.+48     	; 0x18c <MDIO_voidSetPinDir+0x42>
 15c:	90 3c       	cpi	r25, 0xC0	; 192
 15e:	41 f0       	breq	.+16     	; 0x170 <MDIO_voidSetPinDir+0x26>
 160:	90 3d       	cpi	r25, 0xD0	; 208
 162:	59 f0       	breq	.+22     	; 0x17a <MDIO_voidSetPinDir+0x30>
 164:	13 c0       	rjmp	.+38     	; 0x18c <MDIO_voidSetPinDir+0x42>
 166:	a8 e3       	ldi	r26, 0x38	; 56
 168:	b0 e0       	ldi	r27, 0x00	; 0
 16a:	e7 e3       	ldi	r30, 0x37	; 55
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	0e c0       	rjmp	.+28     	; 0x18c <MDIO_voidSetPinDir+0x42>
 170:	a5 e3       	ldi	r26, 0x35	; 53
 172:	b0 e0       	ldi	r27, 0x00	; 0
 174:	e4 e3       	ldi	r30, 0x34	; 52
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	09 c0       	rjmp	.+18     	; 0x18c <MDIO_voidSetPinDir+0x42>
 17a:	a2 e3       	ldi	r26, 0x32	; 50
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	e1 e3       	ldi	r30, 0x31	; 49
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	04 c0       	rjmp	.+8      	; 0x18c <MDIO_voidSetPinDir+0x42>
 184:	ab e3       	ldi	r26, 0x3B	; 59
 186:	b0 e0       	ldi	r27, 0x00	; 0
 188:	ea e3       	ldi	r30, 0x3A	; 58
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	61 30       	cpi	r22, 0x01	; 1
 18e:	91 f0       	breq	.+36     	; 0x1b4 <MDIO_voidSetPinDir+0x6a>
 190:	18 f0       	brcs	.+6      	; 0x198 <MDIO_voidSetPinDir+0x4e>
 192:	62 30       	cpi	r22, 0x02	; 2
 194:	e1 f0       	breq	.+56     	; 0x1ce <MDIO_voidSetPinDir+0x84>
 196:	08 95       	ret
 198:	40 81       	ld	r20, Z
 19a:	21 e0       	ldi	r18, 0x01	; 1
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	b9 01       	movw	r22, r18
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <MDIO_voidSetPinDir+0x5c>
 1a2:	66 0f       	add	r22, r22
 1a4:	77 1f       	adc	r23, r23
 1a6:	8a 95       	dec	r24
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <MDIO_voidSetPinDir+0x58>
 1aa:	cb 01       	movw	r24, r22
 1ac:	80 95       	com	r24
 1ae:	84 23       	and	r24, r20
 1b0:	80 83       	st	Z, r24
 1b2:	08 95       	ret
 1b4:	40 81       	ld	r20, Z
 1b6:	21 e0       	ldi	r18, 0x01	; 1
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	b9 01       	movw	r22, r18
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <MDIO_voidSetPinDir+0x78>
 1be:	66 0f       	add	r22, r22
 1c0:	77 1f       	adc	r23, r23
 1c2:	8a 95       	dec	r24
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <MDIO_voidSetPinDir+0x74>
 1c6:	cb 01       	movw	r24, r22
 1c8:	84 2b       	or	r24, r20
 1ca:	80 83       	st	Z, r24
 1cc:	08 95       	ret
 1ce:	40 81       	ld	r20, Z
 1d0:	21 e0       	ldi	r18, 0x01	; 1
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	b9 01       	movw	r22, r18
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <MDIO_voidSetPinDir+0x92>
 1d8:	66 0f       	add	r22, r22
 1da:	77 1f       	adc	r23, r23
 1dc:	8a 95       	dec	r24
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <MDIO_voidSetPinDir+0x8e>
 1e0:	cb 01       	movw	r24, r22
 1e2:	96 2f       	mov	r25, r22
 1e4:	90 95       	com	r25
 1e6:	94 23       	and	r25, r20
 1e8:	90 83       	st	Z, r25
 1ea:	9c 91       	ld	r25, X
 1ec:	89 2b       	or	r24, r25
 1ee:	8c 93       	st	X, r24
 1f0:	08 95       	ret

000001f2 <MDIO_voidTogPinVal>:

void MDIO_voidTogPinVal(Pin_t A_Pin_tPin){
	u8 L_portNum = A_Pin_tPin & 0xF0;
 1f2:	98 2f       	mov	r25, r24
 1f4:	90 7f       	andi	r25, 0xF0	; 240
	u8 L_pinNum = A_Pin_tPin & 0x0F;
 1f6:	28 2f       	mov	r18, r24
 1f8:	2f 70       	andi	r18, 0x0F	; 15
	
	volatile u8  *L_dirReg = NULL,*L_valReg =NULL;
	
	switch (L_portNum)
 1fa:	90 3b       	cpi	r25, 0xB0	; 176
 1fc:	59 f0       	breq	.+22     	; 0x214 <MDIO_voidTogPinVal+0x22>
 1fe:	18 f4       	brcc	.+6      	; 0x206 <MDIO_voidTogPinVal+0x14>
 200:	90 3a       	cpi	r25, 0xA0	; 160
 202:	89 f0       	breq	.+34     	; 0x226 <MDIO_voidTogPinVal+0x34>
 204:	04 c0       	rjmp	.+8      	; 0x20e <MDIO_voidTogPinVal+0x1c>
 206:	90 3c       	cpi	r25, 0xC0	; 192
 208:	41 f0       	breq	.+16     	; 0x21a <MDIO_voidTogPinVal+0x28>
 20a:	90 3d       	cpi	r25, 0xD0	; 208
 20c:	49 f0       	breq	.+18     	; 0x220 <MDIO_voidTogPinVal+0x2e>

void MDIO_voidTogPinVal(Pin_t A_Pin_tPin){
	u8 L_portNum = A_Pin_tPin & 0xF0;
	u8 L_pinNum = A_Pin_tPin & 0x0F;
	
	volatile u8  *L_dirReg = NULL,*L_valReg =NULL;
 20e:	e0 e0       	ldi	r30, 0x00	; 0
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	0b c0       	rjmp	.+22     	; 0x22a <MDIO_voidTogPinVal+0x38>
	{
		case MDIO_PORT_A_NUM:
		L_dirReg = &DDRA_REG; L_valReg = &PORTA_REG;
		break;
		case MDIO_PORT_B_NUM:
		L_dirReg = &DDRB_REG; L_valReg = &PORTB_REG;
 214:	e8 e3       	ldi	r30, 0x38	; 56
 216:	f0 e0       	ldi	r31, 0x00	; 0

		break;
 218:	08 c0       	rjmp	.+16     	; 0x22a <MDIO_voidTogPinVal+0x38>
		case MDIO_PORT_C_NUM:
		L_dirReg = &DDRC_REG; L_valReg = &PORTC_REG;
 21a:	e5 e3       	ldi	r30, 0x35	; 53
 21c:	f0 e0       	ldi	r31, 0x00	; 0

		break;
 21e:	05 c0       	rjmp	.+10     	; 0x22a <MDIO_voidTogPinVal+0x38>
		case MDIO_PORT_D_NUM:
		L_dirReg = &DDRD_REG; L_valReg = &PORTD_REG;
 220:	e2 e3       	ldi	r30, 0x32	; 50
 222:	f0 e0       	ldi	r31, 0x00	; 0

		break;
 224:	02 c0       	rjmp	.+4      	; 0x22a <MDIO_voidTogPinVal+0x38>
	volatile u8  *L_dirReg = NULL,*L_valReg =NULL;
	
	switch (L_portNum)
	{
		case MDIO_PORT_A_NUM:
		L_dirReg = &DDRA_REG; L_valReg = &PORTA_REG;
 226:	eb e3       	ldi	r30, 0x3B	; 59
 228:	f0 e0       	ldi	r31, 0x00	; 0
		L_dirReg = &DDRD_REG; L_valReg = &PORTD_REG;

		break;
	}
	
	TOG_BIT(*L_valReg,L_pinNum);
 22a:	30 81       	ld	r19, Z
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <MDIO_voidTogPinVal+0x44>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	2a 95       	dec	r18
 238:	e2 f7       	brpl	.-8      	; 0x232 <MDIO_voidTogPinVal+0x40>
 23a:	83 27       	eor	r24, r19
 23c:	80 83       	st	Z, r24
 23e:	08 95       	ret

00000240 <MEXT_INT_0_voidInit>:
void MEXT_INT_2_voidEnable(void){
		SET_BIT(GICR_REG,GICR_INT2_BIT);
}

void MEXT_INT_2_voidDisable(void){
		CLR_BIT(GICR_REG,GICR_INT2_BIT);
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	82 ed       	ldi	r24, 0xD2	; 210
 244:	0e 94 a5 00 	call	0x14a	; 0x14a <MDIO_voidSetPinDir>
 248:	08 95       	ret

0000024a <MEXT_INT_0_voidEnable>:
 24a:	8b b7       	in	r24, 0x3b	; 59
 24c:	80 64       	ori	r24, 0x40	; 64
 24e:	8b bf       	out	0x3b, r24	; 59
 250:	08 95       	ret

00000252 <MEXT_INT_0_voidSenseControl>:
 252:	81 30       	cpi	r24, 0x01	; 1
 254:	69 f0       	breq	.+26     	; 0x270 <MEXT_INT_0_voidSenseControl+0x1e>
 256:	28 f0       	brcs	.+10     	; 0x262 <MEXT_INT_0_voidSenseControl+0x10>
 258:	82 30       	cpi	r24, 0x02	; 2
 25a:	89 f0       	breq	.+34     	; 0x27e <MEXT_INT_0_voidSenseControl+0x2c>
 25c:	83 30       	cpi	r24, 0x03	; 3
 25e:	b1 f0       	breq	.+44     	; 0x28c <MEXT_INT_0_voidSenseControl+0x3a>
 260:	08 95       	ret
 262:	85 b7       	in	r24, 0x35	; 53
 264:	8e 7f       	andi	r24, 0xFE	; 254
 266:	85 bf       	out	0x35, r24	; 53
 268:	85 b7       	in	r24, 0x35	; 53
 26a:	8d 7f       	andi	r24, 0xFD	; 253
 26c:	85 bf       	out	0x35, r24	; 53
 26e:	08 95       	ret
 270:	85 b7       	in	r24, 0x35	; 53
 272:	81 60       	ori	r24, 0x01	; 1
 274:	85 bf       	out	0x35, r24	; 53
 276:	85 b7       	in	r24, 0x35	; 53
 278:	8d 7f       	andi	r24, 0xFD	; 253
 27a:	85 bf       	out	0x35, r24	; 53
 27c:	08 95       	ret
 27e:	85 b7       	in	r24, 0x35	; 53
 280:	8e 7f       	andi	r24, 0xFE	; 254
 282:	85 bf       	out	0x35, r24	; 53
 284:	85 b7       	in	r24, 0x35	; 53
 286:	82 60       	ori	r24, 0x02	; 2
 288:	85 bf       	out	0x35, r24	; 53
 28a:	08 95       	ret
 28c:	85 b7       	in	r24, 0x35	; 53
 28e:	81 60       	ori	r24, 0x01	; 1
 290:	85 bf       	out	0x35, r24	; 53
 292:	85 b7       	in	r24, 0x35	; 53
 294:	82 60       	ori	r24, 0x02	; 2
 296:	85 bf       	out	0x35, r24	; 53
 298:	08 95       	ret

0000029a <MEXT_INT_0_voidSetCallback>:
 29a:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <G_ptr2voidCallback_INT_0_callBack+0x1>
 29e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <G_ptr2voidCallback_INT_0_callBack>
 2a2:	08 95       	ret

000002a4 <MEXT_INT_1_voidInit>:
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	83 ed       	ldi	r24, 0xD3	; 211
 2a8:	0e 94 a5 00 	call	0x14a	; 0x14a <MDIO_voidSetPinDir>
 2ac:	08 95       	ret

000002ae <MEXT_INT_1_voidEnable>:
 2ae:	8b b7       	in	r24, 0x3b	; 59
 2b0:	80 68       	ori	r24, 0x80	; 128
 2b2:	8b bf       	out	0x3b, r24	; 59
 2b4:	08 95       	ret

000002b6 <MEXT_INT_1_voidSenseControl>:
 2b6:	81 30       	cpi	r24, 0x01	; 1
 2b8:	69 f0       	breq	.+26     	; 0x2d4 <MEXT_INT_1_voidSenseControl+0x1e>
 2ba:	28 f0       	brcs	.+10     	; 0x2c6 <MEXT_INT_1_voidSenseControl+0x10>
 2bc:	82 30       	cpi	r24, 0x02	; 2
 2be:	89 f0       	breq	.+34     	; 0x2e2 <MEXT_INT_1_voidSenseControl+0x2c>
 2c0:	83 30       	cpi	r24, 0x03	; 3
 2c2:	b1 f0       	breq	.+44     	; 0x2f0 <MEXT_INT_1_voidSenseControl+0x3a>
 2c4:	08 95       	ret
 2c6:	85 b7       	in	r24, 0x35	; 53
 2c8:	8b 7f       	andi	r24, 0xFB	; 251
 2ca:	85 bf       	out	0x35, r24	; 53
 2cc:	85 b7       	in	r24, 0x35	; 53
 2ce:	87 7f       	andi	r24, 0xF7	; 247
 2d0:	85 bf       	out	0x35, r24	; 53
 2d2:	08 95       	ret
 2d4:	85 b7       	in	r24, 0x35	; 53
 2d6:	84 60       	ori	r24, 0x04	; 4
 2d8:	85 bf       	out	0x35, r24	; 53
 2da:	85 b7       	in	r24, 0x35	; 53
 2dc:	87 7f       	andi	r24, 0xF7	; 247
 2de:	85 bf       	out	0x35, r24	; 53
 2e0:	08 95       	ret
 2e2:	85 b7       	in	r24, 0x35	; 53
 2e4:	8b 7f       	andi	r24, 0xFB	; 251
 2e6:	85 bf       	out	0x35, r24	; 53
 2e8:	85 b7       	in	r24, 0x35	; 53
 2ea:	88 60       	ori	r24, 0x08	; 8
 2ec:	85 bf       	out	0x35, r24	; 53
 2ee:	08 95       	ret
 2f0:	85 b7       	in	r24, 0x35	; 53
 2f2:	84 60       	ori	r24, 0x04	; 4
 2f4:	85 bf       	out	0x35, r24	; 53
 2f6:	85 b7       	in	r24, 0x35	; 53
 2f8:	88 60       	ori	r24, 0x08	; 8
 2fa:	85 bf       	out	0x35, r24	; 53
 2fc:	08 95       	ret

000002fe <MEXT_INT_1_voidSetCallback>:
 2fe:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <G_ptr2voidCallback_INT_1_callBack+0x1>
 302:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <G_ptr2voidCallback_INT_1_callBack>
 306:	08 95       	ret

00000308 <MEXT_INT_2_voidInit>:
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	82 eb       	ldi	r24, 0xB2	; 178
 30c:	0e 94 a5 00 	call	0x14a	; 0x14a <MDIO_voidSetPinDir>
 310:	08 95       	ret

00000312 <MEXT_INT_2_voidEnable>:
 312:	8b b7       	in	r24, 0x3b	; 59
 314:	80 62       	ori	r24, 0x20	; 32
 316:	8b bf       	out	0x3b, r24	; 59
 318:	08 95       	ret

0000031a <MEXT_INT_2_voidSenseControl>:
}

void MEXT_INT_2_voidSenseControl(MEXT_INT_2_Sense_Control_t A_MEXT_INT_2_Sense_Control_t_control){
	switch(A_MEXT_INT_2_Sense_Control_t_control){
 31a:	88 23       	and	r24, r24
 31c:	19 f0       	breq	.+6      	; 0x324 <MEXT_INT_2_voidSenseControl+0xa>
 31e:	81 30       	cpi	r24, 0x01	; 1
 320:	29 f0       	breq	.+10     	; 0x32c <MEXT_INT_2_voidSenseControl+0x12>
 322:	08 95       	ret
		case MEXT_INT_2_Sense_FallingEdge:
		CLR_BIT(MCUCSR_REG,MCUCSR_ISC2_BIT);
 324:	84 b7       	in	r24, 0x34	; 52
 326:	8f 7b       	andi	r24, 0xBF	; 191
 328:	84 bf       	out	0x34, r24	; 52
		break;
 32a:	08 95       	ret

		case MEXT_INT_2_Sense_RisingEdge:
		SET_BIT(MCUCSR_REG,MCUCSR_ISC2_BIT);
 32c:	84 b7       	in	r24, 0x34	; 52
 32e:	80 64       	ori	r24, 0x40	; 64
 330:	84 bf       	out	0x34, r24	; 52
 332:	08 95       	ret

00000334 <MEXT_INT_2_voidSetCallback>:
		break;
	}
}

void MEXT_INT_2_voidSetCallback( ptr2voidCallback A_ptr2voidCallback_callBack ){
			G_ptr2voidCallback_INT_2_callBack = A_ptr2voidCallback_callBack;
 334:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 338:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 33c:	08 95       	ret

0000033e <__vector_1>:




void __vector_1 (void) __attribute__ ((signal,used, externally_visible));
void __vector_1 (void){
 33e:	1f 92       	push	r1
 340:	0f 92       	push	r0
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	0f 92       	push	r0
 346:	11 24       	eor	r1, r1
 348:	2f 93       	push	r18
 34a:	3f 93       	push	r19
 34c:	4f 93       	push	r20
 34e:	5f 93       	push	r21
 350:	6f 93       	push	r22
 352:	7f 93       	push	r23
 354:	8f 93       	push	r24
 356:	9f 93       	push	r25
 358:	af 93       	push	r26
 35a:	bf 93       	push	r27
 35c:	ef 93       	push	r30
 35e:	ff 93       	push	r31
	if(G_ptr2voidCallback_INT_0_callBack != NULL){
 360:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <G_ptr2voidCallback_INT_0_callBack>
 364:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <G_ptr2voidCallback_INT_0_callBack+0x1>
 368:	30 97       	sbiw	r30, 0x00	; 0
 36a:	09 f0       	breq	.+2      	; 0x36e <__vector_1+0x30>
		G_ptr2voidCallback_INT_0_callBack();
 36c:	09 95       	icall
	}
}
 36e:	ff 91       	pop	r31
 370:	ef 91       	pop	r30
 372:	bf 91       	pop	r27
 374:	af 91       	pop	r26
 376:	9f 91       	pop	r25
 378:	8f 91       	pop	r24
 37a:	7f 91       	pop	r23
 37c:	6f 91       	pop	r22
 37e:	5f 91       	pop	r21
 380:	4f 91       	pop	r20
 382:	3f 91       	pop	r19
 384:	2f 91       	pop	r18
 386:	0f 90       	pop	r0
 388:	0f be       	out	0x3f, r0	; 63
 38a:	0f 90       	pop	r0
 38c:	1f 90       	pop	r1
 38e:	18 95       	reti

00000390 <__vector_2>:


void __vector_2 (void) __attribute__ ((signal,used, externally_visible));
void __vector_2 (void){
 390:	1f 92       	push	r1
 392:	0f 92       	push	r0
 394:	0f b6       	in	r0, 0x3f	; 63
 396:	0f 92       	push	r0
 398:	11 24       	eor	r1, r1
 39a:	2f 93       	push	r18
 39c:	3f 93       	push	r19
 39e:	4f 93       	push	r20
 3a0:	5f 93       	push	r21
 3a2:	6f 93       	push	r22
 3a4:	7f 93       	push	r23
 3a6:	8f 93       	push	r24
 3a8:	9f 93       	push	r25
 3aa:	af 93       	push	r26
 3ac:	bf 93       	push	r27
 3ae:	ef 93       	push	r30
 3b0:	ff 93       	push	r31
	if(G_ptr2voidCallback_INT_1_callBack != NULL){
 3b2:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <G_ptr2voidCallback_INT_1_callBack>
 3b6:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <G_ptr2voidCallback_INT_1_callBack+0x1>
 3ba:	30 97       	sbiw	r30, 0x00	; 0
 3bc:	09 f0       	breq	.+2      	; 0x3c0 <__vector_2+0x30>
		G_ptr2voidCallback_INT_1_callBack();
 3be:	09 95       	icall
	}
}
 3c0:	ff 91       	pop	r31
 3c2:	ef 91       	pop	r30
 3c4:	bf 91       	pop	r27
 3c6:	af 91       	pop	r26
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	7f 91       	pop	r23
 3ce:	6f 91       	pop	r22
 3d0:	5f 91       	pop	r21
 3d2:	4f 91       	pop	r20
 3d4:	3f 91       	pop	r19
 3d6:	2f 91       	pop	r18
 3d8:	0f 90       	pop	r0
 3da:	0f be       	out	0x3f, r0	; 63
 3dc:	0f 90       	pop	r0
 3de:	1f 90       	pop	r1
 3e0:	18 95       	reti

000003e2 <__vector_3>:


void __vector_3 (void) __attribute__ ((signal,used, externally_visible));
void __vector_3 (void){
 3e2:	1f 92       	push	r1
 3e4:	0f 92       	push	r0
 3e6:	0f b6       	in	r0, 0x3f	; 63
 3e8:	0f 92       	push	r0
 3ea:	11 24       	eor	r1, r1
 3ec:	2f 93       	push	r18
 3ee:	3f 93       	push	r19
 3f0:	4f 93       	push	r20
 3f2:	5f 93       	push	r21
 3f4:	6f 93       	push	r22
 3f6:	7f 93       	push	r23
 3f8:	8f 93       	push	r24
 3fa:	9f 93       	push	r25
 3fc:	af 93       	push	r26
 3fe:	bf 93       	push	r27
 400:	ef 93       	push	r30
 402:	ff 93       	push	r31
	if(G_ptr2voidCallback_INT_2_callBack != NULL){
 404:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 408:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 40c:	30 97       	sbiw	r30, 0x00	; 0
 40e:	09 f0       	breq	.+2      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
		G_ptr2voidCallback_INT_2_callBack();
 410:	09 95       	icall
	}
 412:	ff 91       	pop	r31
 414:	ef 91       	pop	r30
 416:	bf 91       	pop	r27
 418:	af 91       	pop	r26
 41a:	9f 91       	pop	r25
 41c:	8f 91       	pop	r24
 41e:	7f 91       	pop	r23
 420:	6f 91       	pop	r22
 422:	5f 91       	pop	r21
 424:	4f 91       	pop	r20
 426:	3f 91       	pop	r19
 428:	2f 91       	pop	r18
 42a:	0f 90       	pop	r0
 42c:	0f be       	out	0x3f, r0	; 63
 42e:	0f 90       	pop	r0
 430:	1f 90       	pop	r1
 432:	18 95       	reti

00000434 <MGI_void_Enable>:
#include "GI_config.h"
#include "GI_interface.h"
#include "GI_private.h"

void MGI_void_Enable(void){
	SET_BIT(SREG_REG,SREG_I_BIT);	
 434:	8f b7       	in	r24, 0x3f	; 63
 436:	80 68       	ori	r24, 0x80	; 128
 438:	8f bf       	out	0x3f, r24	; 63
 43a:	08 95       	ret

0000043c <_exit>:
 43c:	f8 94       	cli

0000043e <__stop_program>:
 43e:	ff cf       	rjmp	.-2      	; 0x43e <__stop_program>
